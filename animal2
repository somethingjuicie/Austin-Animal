{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "name": "Untitled1.ipynb",
      "provenance": [],
      "collapsed_sections": [],
      "authorship_tag": "ABX9TyM9xfqsA+nnx2yB48HzbcMt",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/somethingjuicie/Austin-Animal/blob/main/animal2\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 2,
      "metadata": {
        "id": "SncqBIBC62iV",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "8c04eb21-26d0-42a7-992d-79bc9441db32"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "/usr/local/lib/python3.7/dist-packages/statsmodels/tools/_testing.py:19: FutureWarning: pandas.util.testing is deprecated. Use the functions in the public API at pandas.testing instead.\n",
            "  import pandas.util.testing as tm\n"
          ]
        }
      ],
      "source": [
        "import numpy as np\n",
        "import pandas as pd \n",
        "import matplotlib.pyplot as plt\n",
        "from scipy import spatial\n",
        "import statsmodels.api as sm\n",
        "\n",
        "from IPython.display import HTML \n",
        "from IPython.display import Image \n",
        "\n",
        "animal = pd.read_csv(\"https://raw.githubusercontent.com/somethingjuicie/meesala_IT533/main/aac_intakes.csv\")\n"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "animal"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 423
        },
        "id": "vDy_Wzzo7zPM",
        "outputId": "29c23e75-0c7d-4a56-e987-c5898dc86f79"
      },
      "execution_count": 3,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "\n",
              "  <div id=\"df-9fdbfe1b-a780-476e-b2f1-f5fec9e3191b\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>age_upon_intake</th>\n",
              "      <th>animal_id</th>\n",
              "      <th>animal_type</th>\n",
              "      <th>breed</th>\n",
              "      <th>color</th>\n",
              "      <th>datetime</th>\n",
              "      <th>datetime2</th>\n",
              "      <th>found_location</th>\n",
              "      <th>intake_condition</th>\n",
              "      <th>intake_type</th>\n",
              "      <th>name</th>\n",
              "      <th>sex_upon_intake</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>8 years</td>\n",
              "      <td>A706918</td>\n",
              "      <td>Dog</td>\n",
              "      <td>English Springer Spaniel</td>\n",
              "      <td>White/Liver</td>\n",
              "      <td>2015-07-05T12:59:00.000</td>\n",
              "      <td>2015-07-05T12:59:00.000</td>\n",
              "      <td>9409 Bluegrass Dr in Austin (TX)</td>\n",
              "      <td>Normal</td>\n",
              "      <td>Stray</td>\n",
              "      <td>Belle</td>\n",
              "      <td>Spayed Female</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>11 months</td>\n",
              "      <td>A724273</td>\n",
              "      <td>Dog</td>\n",
              "      <td>Basenji Mix</td>\n",
              "      <td>Sable/White</td>\n",
              "      <td>2016-04-14T18:43:00.000</td>\n",
              "      <td>2016-04-14T18:43:00.000</td>\n",
              "      <td>2818 Palomino Trail in Austin (TX)</td>\n",
              "      <td>Normal</td>\n",
              "      <td>Stray</td>\n",
              "      <td>Runster</td>\n",
              "      <td>Intact Male</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>4 weeks</td>\n",
              "      <td>A665644</td>\n",
              "      <td>Cat</td>\n",
              "      <td>Domestic Shorthair Mix</td>\n",
              "      <td>Calico</td>\n",
              "      <td>2013-10-21T07:59:00.000</td>\n",
              "      <td>2013-10-21T07:59:00.000</td>\n",
              "      <td>Austin (TX)</td>\n",
              "      <td>Sick</td>\n",
              "      <td>Stray</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Intact Female</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>4 years</td>\n",
              "      <td>A682524</td>\n",
              "      <td>Dog</td>\n",
              "      <td>Doberman Pinsch/Australian Cattle Dog</td>\n",
              "      <td>Tan/Gray</td>\n",
              "      <td>2014-06-29T10:38:00.000</td>\n",
              "      <td>2014-06-29T10:38:00.000</td>\n",
              "      <td>800 Grove Blvd in Austin (TX)</td>\n",
              "      <td>Normal</td>\n",
              "      <td>Stray</td>\n",
              "      <td>Rio</td>\n",
              "      <td>Neutered Male</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>2 years</td>\n",
              "      <td>A743852</td>\n",
              "      <td>Dog</td>\n",
              "      <td>Labrador Retriever Mix</td>\n",
              "      <td>Chocolate</td>\n",
              "      <td>2017-02-18T12:46:00.000</td>\n",
              "      <td>2017-02-18T12:46:00.000</td>\n",
              "      <td>Austin (TX)</td>\n",
              "      <td>Normal</td>\n",
              "      <td>Owner Surrender</td>\n",
              "      <td>Odin</td>\n",
              "      <td>Neutered Male</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>80182</th>\n",
              "      <td>10 years</td>\n",
              "      <td>A769067</td>\n",
              "      <td>Dog</td>\n",
              "      <td>Boxer Mix</td>\n",
              "      <td>Brown Brindle</td>\n",
              "      <td>2018-03-29T18:20:00.000</td>\n",
              "      <td>2018-03-29T18:20:00.000</td>\n",
              "      <td>11216 Jollyville Rd 216 in Austin (TX)</td>\n",
              "      <td>Aged</td>\n",
              "      <td>Stray</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Spayed Female</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>80183</th>\n",
              "      <td>5 years</td>\n",
              "      <td>A768934</td>\n",
              "      <td>Dog</td>\n",
              "      <td>Dachshund Wirehair/Chihuahua Shorthair</td>\n",
              "      <td>Chocolate/White</td>\n",
              "      <td>2018-03-27T14:27:00.000</td>\n",
              "      <td>2018-03-27T14:27:00.000</td>\n",
              "      <td>603 West Johanna Street in Austin (TX)</td>\n",
              "      <td>Normal</td>\n",
              "      <td>Stray</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Intact Male</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>80184</th>\n",
              "      <td>2 years</td>\n",
              "      <td>A769064</td>\n",
              "      <td>Other</td>\n",
              "      <td>Bat Mix</td>\n",
              "      <td>Brown</td>\n",
              "      <td>2018-03-29T17:13:00.000</td>\n",
              "      <td>2018-03-29T17:13:00.000</td>\n",
              "      <td>2519 Scarbrough Dr in Travis (TX)</td>\n",
              "      <td>Normal</td>\n",
              "      <td>Wildlife</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Unknown</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>80185</th>\n",
              "      <td>3 years</td>\n",
              "      <td>A675680</td>\n",
              "      <td>Dog</td>\n",
              "      <td>German Shepherd/Black/Tan Hound</td>\n",
              "      <td>Black/Brown</td>\n",
              "      <td>2014-03-31T18:10:00.000</td>\n",
              "      <td>2014-03-31T18:10:00.000</td>\n",
              "      <td>Austin (TX)</td>\n",
              "      <td>Normal</td>\n",
              "      <td>Public Assist</td>\n",
              "      <td>Draco</td>\n",
              "      <td>Neutered Male</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>80186</th>\n",
              "      <td>1 year</td>\n",
              "      <td>A680949</td>\n",
              "      <td>Dog</td>\n",
              "      <td>Chihuahua Shorthair/Beagle</td>\n",
              "      <td>Tan</td>\n",
              "      <td>2014-06-10T11:53:00.000</td>\n",
              "      <td>2014-06-10T11:53:00.000</td>\n",
              "      <td>4605 Lyra Cir in Austin (TX)</td>\n",
              "      <td>Normal</td>\n",
              "      <td>Stray</td>\n",
              "      <td>Lolo</td>\n",
              "      <td>Intact Male</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>80187 rows × 12 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-9fdbfe1b-a780-476e-b2f1-f5fec9e3191b')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-9fdbfe1b-a780-476e-b2f1-f5fec9e3191b button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-9fdbfe1b-a780-476e-b2f1-f5fec9e3191b');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ],
            "text/plain": [
              "      age_upon_intake animal_id  ...     name sex_upon_intake\n",
              "0             8 years   A706918  ...    Belle   Spayed Female\n",
              "1           11 months   A724273  ...  Runster     Intact Male\n",
              "2             4 weeks   A665644  ...      NaN   Intact Female\n",
              "3             4 years   A682524  ...      Rio   Neutered Male\n",
              "4             2 years   A743852  ...     Odin   Neutered Male\n",
              "...               ...       ...  ...      ...             ...\n",
              "80182        10 years   A769067  ...      NaN   Spayed Female\n",
              "80183         5 years   A768934  ...      NaN     Intact Male\n",
              "80184         2 years   A769064  ...      NaN         Unknown\n",
              "80185         3 years   A675680  ...    Draco   Neutered Male\n",
              "80186          1 year   A680949  ...     Lolo     Intact Male\n",
              "\n",
              "[80187 rows x 12 columns]"
            ]
          },
          "metadata": {},
          "execution_count": 3
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "del animal['name']"
      ],
      "metadata": {
        "id": "cnwnuU6hCDM-"
      },
      "execution_count": 4,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "del animal['datetime2']"
      ],
      "metadata": {
        "id": "dothUvXqC2AA"
      },
      "execution_count": 5,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "del animal['animal_id']"
      ],
      "metadata": {
        "id": "DkZwcDWsC9FO"
      },
      "execution_count": 6,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "del animal['sex_upon_intake']"
      ],
      "metadata": {
        "id": "SepkRJRkH16j"
      },
      "execution_count": 7,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "animal"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 423
        },
        "id": "RYBRnLlrDCO7",
        "outputId": "acbfd63e-c893-415f-89f4-f2bc4afd4d21"
      },
      "execution_count": 8,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "\n",
              "  <div id=\"df-fed056d2-e7d7-417d-ae09-14c0abc13d43\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>age_upon_intake</th>\n",
              "      <th>animal_type</th>\n",
              "      <th>breed</th>\n",
              "      <th>color</th>\n",
              "      <th>datetime</th>\n",
              "      <th>found_location</th>\n",
              "      <th>intake_condition</th>\n",
              "      <th>intake_type</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>8 years</td>\n",
              "      <td>Dog</td>\n",
              "      <td>English Springer Spaniel</td>\n",
              "      <td>White/Liver</td>\n",
              "      <td>2015-07-05T12:59:00.000</td>\n",
              "      <td>9409 Bluegrass Dr in Austin (TX)</td>\n",
              "      <td>Normal</td>\n",
              "      <td>Stray</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>11 months</td>\n",
              "      <td>Dog</td>\n",
              "      <td>Basenji Mix</td>\n",
              "      <td>Sable/White</td>\n",
              "      <td>2016-04-14T18:43:00.000</td>\n",
              "      <td>2818 Palomino Trail in Austin (TX)</td>\n",
              "      <td>Normal</td>\n",
              "      <td>Stray</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>4 weeks</td>\n",
              "      <td>Cat</td>\n",
              "      <td>Domestic Shorthair Mix</td>\n",
              "      <td>Calico</td>\n",
              "      <td>2013-10-21T07:59:00.000</td>\n",
              "      <td>Austin (TX)</td>\n",
              "      <td>Sick</td>\n",
              "      <td>Stray</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>4 years</td>\n",
              "      <td>Dog</td>\n",
              "      <td>Doberman Pinsch/Australian Cattle Dog</td>\n",
              "      <td>Tan/Gray</td>\n",
              "      <td>2014-06-29T10:38:00.000</td>\n",
              "      <td>800 Grove Blvd in Austin (TX)</td>\n",
              "      <td>Normal</td>\n",
              "      <td>Stray</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>2 years</td>\n",
              "      <td>Dog</td>\n",
              "      <td>Labrador Retriever Mix</td>\n",
              "      <td>Chocolate</td>\n",
              "      <td>2017-02-18T12:46:00.000</td>\n",
              "      <td>Austin (TX)</td>\n",
              "      <td>Normal</td>\n",
              "      <td>Owner Surrender</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>80182</th>\n",
              "      <td>10 years</td>\n",
              "      <td>Dog</td>\n",
              "      <td>Boxer Mix</td>\n",
              "      <td>Brown Brindle</td>\n",
              "      <td>2018-03-29T18:20:00.000</td>\n",
              "      <td>11216 Jollyville Rd 216 in Austin (TX)</td>\n",
              "      <td>Aged</td>\n",
              "      <td>Stray</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>80183</th>\n",
              "      <td>5 years</td>\n",
              "      <td>Dog</td>\n",
              "      <td>Dachshund Wirehair/Chihuahua Shorthair</td>\n",
              "      <td>Chocolate/White</td>\n",
              "      <td>2018-03-27T14:27:00.000</td>\n",
              "      <td>603 West Johanna Street in Austin (TX)</td>\n",
              "      <td>Normal</td>\n",
              "      <td>Stray</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>80184</th>\n",
              "      <td>2 years</td>\n",
              "      <td>Other</td>\n",
              "      <td>Bat Mix</td>\n",
              "      <td>Brown</td>\n",
              "      <td>2018-03-29T17:13:00.000</td>\n",
              "      <td>2519 Scarbrough Dr in Travis (TX)</td>\n",
              "      <td>Normal</td>\n",
              "      <td>Wildlife</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>80185</th>\n",
              "      <td>3 years</td>\n",
              "      <td>Dog</td>\n",
              "      <td>German Shepherd/Black/Tan Hound</td>\n",
              "      <td>Black/Brown</td>\n",
              "      <td>2014-03-31T18:10:00.000</td>\n",
              "      <td>Austin (TX)</td>\n",
              "      <td>Normal</td>\n",
              "      <td>Public Assist</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>80186</th>\n",
              "      <td>1 year</td>\n",
              "      <td>Dog</td>\n",
              "      <td>Chihuahua Shorthair/Beagle</td>\n",
              "      <td>Tan</td>\n",
              "      <td>2014-06-10T11:53:00.000</td>\n",
              "      <td>4605 Lyra Cir in Austin (TX)</td>\n",
              "      <td>Normal</td>\n",
              "      <td>Stray</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>80187 rows × 8 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-fed056d2-e7d7-417d-ae09-14c0abc13d43')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-fed056d2-e7d7-417d-ae09-14c0abc13d43 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-fed056d2-e7d7-417d-ae09-14c0abc13d43');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ],
            "text/plain": [
              "      age_upon_intake animal_type  ... intake_condition      intake_type\n",
              "0             8 years         Dog  ...           Normal            Stray\n",
              "1           11 months         Dog  ...           Normal            Stray\n",
              "2             4 weeks         Cat  ...             Sick            Stray\n",
              "3             4 years         Dog  ...           Normal            Stray\n",
              "4             2 years         Dog  ...           Normal  Owner Surrender\n",
              "...               ...         ...  ...              ...              ...\n",
              "80182        10 years         Dog  ...             Aged            Stray\n",
              "80183         5 years         Dog  ...           Normal            Stray\n",
              "80184         2 years       Other  ...           Normal         Wildlife\n",
              "80185         3 years         Dog  ...           Normal    Public Assist\n",
              "80186          1 year         Dog  ...           Normal            Stray\n",
              "\n",
              "[80187 rows x 8 columns]"
            ]
          },
          "metadata": {},
          "execution_count": 8
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "age_upon_intake=animal.age_upon_intake\n",
        "animal['age_upon_intake'] = age_upon_intake\n",
        "animal.age_upon_intake\n",
        "animal['age_upon_intake']= animal['age_upon_intake'].astype('category')\n",
        "animal['age_upon_intake']= animal['age_upon_intake'].cat.codes\n",
        "animal.dtypes[['age_upon_intake','age_upon_intake']]"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "PxCa0MIiDsaT",
        "outputId": "894ecf08-b369-43ec-ef7a-fe6b38bf2a46"
      },
      "execution_count": 9,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "age_upon_intake    int8\n",
              "age_upon_intake    int8\n",
              "dtype: object"
            ]
          },
          "metadata": {},
          "execution_count": 9
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "animal_type=animal.animal_type\n",
        "animal['animal_type'] = animal_type\n",
        "animal.animal_type\n",
        "animal['animal_type']= animal['animal_type'].astype('category')\n",
        "animal['animal_type']= animal['animal_type'].cat.codes\n",
        "animal.dtypes[['animal_type','animal_type']]"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "VdCOek7AEUQW",
        "outputId": "b20ffd2a-d68a-48d0-b55e-0bf9071f6fc2"
      },
      "execution_count": 10,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "animal_type    int8\n",
              "animal_type    int8\n",
              "dtype: object"
            ]
          },
          "metadata": {},
          "execution_count": 10
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "breed=animal.breed\n",
        "animal['breed'] = breed\n",
        "animal.breed\n",
        "animal['breed']= animal['breed'].astype('category')\n",
        "animal['breed']= animal['breed'].cat.codes\n",
        "animal.dtypes[['breed','breed']]"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "ijB_ens2E8jY",
        "outputId": "5c23479f-e641-4224-8b29-aa2db07f374c"
      },
      "execution_count": 11,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "breed    int16\n",
              "breed    int16\n",
              "dtype: object"
            ]
          },
          "metadata": {},
          "execution_count": 11
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "color=animal.color\n",
        "animal['color'] = color\n",
        "animal.color\n",
        "animal['color']= animal['color'].astype('category')\n",
        "animal['color']= animal['color'].cat.codes\n",
        "animal.dtypes[['color','color']]"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "CGqiZOLMFDOv",
        "outputId": "3905c8e1-f36c-46f7-b154-0b463a473eb2"
      },
      "execution_count": 12,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "color    int16\n",
              "color    int16\n",
              "dtype: object"
            ]
          },
          "metadata": {},
          "execution_count": 12
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "datetime=animal.datetime\n",
        "animal['datetime'] = datetime\n",
        "animal.datetime\n",
        "animal['datetime']= animal['datetime'].astype('category')\n",
        "animal['datetime']= animal['datetime'].cat.codes\n",
        "animal.dtypes[['datetime','datetime']]"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "tKdDepIyFImN",
        "outputId": "8e8aac0d-29c0-4f13-edd6-2e6674ca54a1"
      },
      "execution_count": 13,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "datetime    int32\n",
              "datetime    int32\n",
              "dtype: object"
            ]
          },
          "metadata": {},
          "execution_count": 13
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "animal_type=animal.animal_type\n",
        "animal['animal_type'] = animal_type\n",
        "animal.animal_type\n",
        "animal['animal_type']= animal['animal_type'].astype('category')\n",
        "animal['animal_type']= animal['animal_type'].cat.codes\n",
        "animal.dtypes[['animal_type','animal_type']]"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "DVVLBDdqFLqC",
        "outputId": "406290f4-c833-4184-a531-ce79f51594f2"
      },
      "execution_count": 14,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "animal_type    int8\n",
              "animal_type    int8\n",
              "dtype: object"
            ]
          },
          "metadata": {},
          "execution_count": 14
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "found_location=animal.found_location\n",
        "animal['found_location'] = found_location\n",
        "animal.found_location\n",
        "animal['found_location']= animal['found_location'].astype('category')\n",
        "animal['found_location']= animal['found_location'].cat.codes\n",
        "animal.dtypes[['found_location','found_location']]"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "rPHnelwoFNhf",
        "outputId": "4dbe4bfd-ef1e-4cb7-dffd-8438b18113a4"
      },
      "execution_count": 15,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "found_location    int32\n",
              "found_location    int32\n",
              "dtype: object"
            ]
          },
          "metadata": {},
          "execution_count": 15
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "intake_condition=animal.intake_condition\n",
        "animal['intake_condition'] = intake_condition\n",
        "animal.intake_condition\n",
        "animal['intake_condition']= animal['intake_condition'].astype('category')\n",
        "animal['intake_condition']= animal['intake_condition'].cat.codes\n",
        "animal.dtypes[['intake_condition','intake_condition']]"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "obZFrzdhFUwX",
        "outputId": "bfd62fd3-79e9-46dc-f97d-b18b6572b23c"
      },
      "execution_count": 16,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "intake_condition    int8\n",
              "intake_condition    int8\n",
              "dtype: object"
            ]
          },
          "metadata": {},
          "execution_count": 16
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "age_upon_intake=animal.age_upon_intake\n",
        "animal['age_upon_intake'] = age_upon_intake\n",
        "animal.age_upon_intake\n",
        "animal['age_upon_intake']= animal['age_upon_intake'].astype('category')\n",
        "animal['age_upon_intake']= animal['age_upon_intake'].cat.codes\n",
        "animal.dtypes[['age_upon_intake','age_upon_intake']]"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "GPBujjNDFYz6",
        "outputId": "ec4ee7e1-3b8e-43cb-b9cf-f450d8eaac6d"
      },
      "execution_count": 17,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "age_upon_intake    int8\n",
              "age_upon_intake    int8\n",
              "dtype: object"
            ]
          },
          "metadata": {},
          "execution_count": 17
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "intake_type=animal.intake_type\n",
        "animal['intake_type'] = intake_type\n",
        "animal.intake_type\n",
        "animal['intake_type']= animal['intake_type'].astype('category')\n",
        "animal['intake_type']= animal['intake_type'].cat.codes\n",
        "animal.dtypes[['intake_type','intake_type']]"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "m1cEH58M3LVW",
        "outputId": "9876a2a7-b278-47b1-aada-5771b8e3f088"
      },
      "execution_count": 18,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "intake_type    int8\n",
              "intake_type    int8\n",
              "dtype: object"
            ]
          },
          "metadata": {},
          "execution_count": 18
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "animal"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 423
        },
        "id": "kYkhvRlH3SXq",
        "outputId": "af5e2dad-7f3b-4a14-8d59-6c65a69bf1b3"
      },
      "execution_count": 19,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "\n",
              "  <div id=\"df-a6638596-0fd9-4966-ad73-0e7bfce9f913\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>age_upon_intake</th>\n",
              "      <th>animal_type</th>\n",
              "      <th>breed</th>\n",
              "      <th>color</th>\n",
              "      <th>datetime</th>\n",
              "      <th>found_location</th>\n",
              "      <th>intake_condition</th>\n",
              "      <th>intake_type</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>43</td>\n",
              "      <td>2</td>\n",
              "      <td>1009</td>\n",
              "      <td>498</td>\n",
              "      <td>22888</td>\n",
              "      <td>24986</td>\n",
              "      <td>3</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>8</td>\n",
              "      <td>2</td>\n",
              "      <td>231</td>\n",
              "      <td>382</td>\n",
              "      <td>32563</td>\n",
              "      <td>12103</td>\n",
              "      <td>3</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>31</td>\n",
              "      <td>1</td>\n",
              "      <td>954</td>\n",
              "      <td>194</td>\n",
              "      <td>738</td>\n",
              "      <td>25970</td>\n",
              "      <td>7</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>32</td>\n",
              "      <td>2</td>\n",
              "      <td>925</td>\n",
              "      <td>415</td>\n",
              "      <td>9535</td>\n",
              "      <td>22379</td>\n",
              "      <td>3</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>21</td>\n",
              "      <td>2</td>\n",
              "      <td>1286</td>\n",
              "      <td>209</td>\n",
              "      <td>43198</td>\n",
              "      <td>25970</td>\n",
              "      <td>3</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>80182</th>\n",
              "      <td>7</td>\n",
              "      <td>2</td>\n",
              "      <td>457</td>\n",
              "      <td>124</td>\n",
              "      <td>57053</td>\n",
              "      <td>2013</td>\n",
              "      <td>0</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>80183</th>\n",
              "      <td>36</td>\n",
              "      <td>2</td>\n",
              "      <td>855</td>\n",
              "      <td>227</td>\n",
              "      <td>56965</td>\n",
              "      <td>18648</td>\n",
              "      <td>3</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>80184</th>\n",
              "      <td>21</td>\n",
              "      <td>4</td>\n",
              "      <td>259</td>\n",
              "      <td>123</td>\n",
              "      <td>57047</td>\n",
              "      <td>11445</td>\n",
              "      <td>3</td>\n",
              "      <td>4</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>80185</th>\n",
              "      <td>28</td>\n",
              "      <td>2</td>\n",
              "      <td>1063</td>\n",
              "      <td>39</td>\n",
              "      <td>6120</td>\n",
              "      <td>25970</td>\n",
              "      <td>3</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>80186</th>\n",
              "      <td>5</td>\n",
              "      <td>2</td>\n",
              "      <td>677</td>\n",
              "      <td>405</td>\n",
              "      <td>8813</td>\n",
              "      <td>15369</td>\n",
              "      <td>3</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>80187 rows × 8 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-a6638596-0fd9-4966-ad73-0e7bfce9f913')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-a6638596-0fd9-4966-ad73-0e7bfce9f913 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-a6638596-0fd9-4966-ad73-0e7bfce9f913');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ],
            "text/plain": [
              "       age_upon_intake  animal_type  ...  intake_condition  intake_type\n",
              "0                   43            2  ...                 3            3\n",
              "1                    8            2  ...                 3            3\n",
              "2                   31            1  ...                 7            3\n",
              "3                   32            2  ...                 3            3\n",
              "4                   21            2  ...                 3            1\n",
              "...                ...          ...  ...               ...          ...\n",
              "80182                7            2  ...                 0            3\n",
              "80183               36            2  ...                 3            3\n",
              "80184               21            4  ...                 3            4\n",
              "80185               28            2  ...                 3            2\n",
              "80186                5            2  ...                 3            3\n",
              "\n",
              "[80187 rows x 8 columns]"
            ]
          },
          "metadata": {},
          "execution_count": 19
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "animal2=animal\n",
        "animal2"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 423
        },
        "id": "QKUPKlNQ3Wr0",
        "outputId": "fc9b9b5e-7df0-49d7-bf5c-02d890b31391"
      },
      "execution_count": 26,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "\n",
              "  <div id=\"df-f3a21a47-c9f3-45be-b235-72f7783e4d70\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>age_upon_intake</th>\n",
              "      <th>animal_type</th>\n",
              "      <th>breed</th>\n",
              "      <th>color</th>\n",
              "      <th>datetime</th>\n",
              "      <th>found_location</th>\n",
              "      <th>intake_condition</th>\n",
              "      <th>intake_type</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>43</td>\n",
              "      <td>2</td>\n",
              "      <td>1009</td>\n",
              "      <td>498</td>\n",
              "      <td>22888</td>\n",
              "      <td>24986</td>\n",
              "      <td>3</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>8</td>\n",
              "      <td>2</td>\n",
              "      <td>231</td>\n",
              "      <td>382</td>\n",
              "      <td>32563</td>\n",
              "      <td>12103</td>\n",
              "      <td>3</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>31</td>\n",
              "      <td>1</td>\n",
              "      <td>954</td>\n",
              "      <td>194</td>\n",
              "      <td>738</td>\n",
              "      <td>25970</td>\n",
              "      <td>7</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>32</td>\n",
              "      <td>2</td>\n",
              "      <td>925</td>\n",
              "      <td>415</td>\n",
              "      <td>9535</td>\n",
              "      <td>22379</td>\n",
              "      <td>3</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>21</td>\n",
              "      <td>2</td>\n",
              "      <td>1286</td>\n",
              "      <td>209</td>\n",
              "      <td>43198</td>\n",
              "      <td>25970</td>\n",
              "      <td>3</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>80182</th>\n",
              "      <td>7</td>\n",
              "      <td>2</td>\n",
              "      <td>457</td>\n",
              "      <td>124</td>\n",
              "      <td>57053</td>\n",
              "      <td>2013</td>\n",
              "      <td>0</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>80183</th>\n",
              "      <td>36</td>\n",
              "      <td>2</td>\n",
              "      <td>855</td>\n",
              "      <td>227</td>\n",
              "      <td>56965</td>\n",
              "      <td>18648</td>\n",
              "      <td>3</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>80184</th>\n",
              "      <td>21</td>\n",
              "      <td>4</td>\n",
              "      <td>259</td>\n",
              "      <td>123</td>\n",
              "      <td>57047</td>\n",
              "      <td>11445</td>\n",
              "      <td>3</td>\n",
              "      <td>4</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>80185</th>\n",
              "      <td>28</td>\n",
              "      <td>2</td>\n",
              "      <td>1063</td>\n",
              "      <td>39</td>\n",
              "      <td>6120</td>\n",
              "      <td>25970</td>\n",
              "      <td>3</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>80186</th>\n",
              "      <td>5</td>\n",
              "      <td>2</td>\n",
              "      <td>677</td>\n",
              "      <td>405</td>\n",
              "      <td>8813</td>\n",
              "      <td>15369</td>\n",
              "      <td>3</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>80187 rows × 8 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-f3a21a47-c9f3-45be-b235-72f7783e4d70')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-f3a21a47-c9f3-45be-b235-72f7783e4d70 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-f3a21a47-c9f3-45be-b235-72f7783e4d70');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ],
            "text/plain": [
              "       age_upon_intake  animal_type  ...  intake_condition  intake_type\n",
              "0                   43            2  ...                 3            3\n",
              "1                    8            2  ...                 3            3\n",
              "2                   31            1  ...                 7            3\n",
              "3                   32            2  ...                 3            3\n",
              "4                   21            2  ...                 3            1\n",
              "...                ...          ...  ...               ...          ...\n",
              "80182                7            2  ...                 0            3\n",
              "80183               36            2  ...                 3            3\n",
              "80184               21            4  ...                 3            4\n",
              "80185               28            2  ...                 3            2\n",
              "80186                5            2  ...                 3            3\n",
              "\n",
              "[80187 rows x 8 columns]"
            ]
          },
          "metadata": {},
          "execution_count": 26
        }
      ]
    }
  ]
}